<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="DB Load" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Basic Configuration" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="start_timestamp" elementType="Argument">
            <stringProp name="Argument.name">start_timestamp</stringProp>
            <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="number_of_threads" elementType="Argument">
            <stringProp name="Argument.name">number_of_threads</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="awr_report_filename_prefix" elementType="Argument">
            <stringProp name="Argument.name">awr_report_filename_prefix</stringProp>
            <stringProp name="Argument.value">~/output/awr_report</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="summary_filename_prefix" elementType="Argument">
            <stringProp name="Argument.name">summary_filename_prefix</stringProp>
            <stringProp name="Argument.value">~/output/sql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sql_delay" elementType="Argument">
            <stringProp name="Argument.name">sql_delay</stringProp>
            <stringProp name="Argument.value">5000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">milliseconds</stringProp>
          </elementProp>
          <elementProp name="sql_delay_deviation" elementType="Argument">
            <stringProp name="Argument.name">sql_delay_deviation</stringProp>
            <stringProp name="Argument.value">1500</stringProp>
            <stringProp name="Argument.desc">milliseconds</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="Test User Connection Pool Configuration" enabled="true">
        <boolProp name="autocommit">false</boolProp>
        <stringProp name="checkQuery">SELECT 1 FROM dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">connection</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@192.168.3.43:1521:DBA121</stringProp>
        <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">ian</stringProp>
        <stringProp name="poolMax">32</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">CHRIS</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="DBA Connection Pool Configuration" enabled="true">
        <boolProp name="autocommit">false</boolProp>
        <stringProp name="checkQuery">SELECT 1 FROM dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">connection_dba</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@192.168.3.43:1521:DBA121</stringProp>
        <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">manager</stringProp>
        <stringProp name="poolMax">1</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">SYSTEM</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1450205013000</longProp>
        <longProp name="ThreadGroup.end_time">1450205013000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Flush Database Buffer Cache" enabled="true">
          <stringProp name="dataSource">connection_dba</stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="query">ALTER SYSTEM FLUSH BUFFER_CACHE</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Flush Database Shared Pool" enabled="true">
          <stringProp name="dataSource">connection_dba</stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="query">ALTER SYSTEM FLUSH SHARED_POOL</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Flush Database Result Cache" enabled="true">
          <stringProp name="dataSource">connection_dba</stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="query">BEGIN
  dbms_result_cache.flush;
END;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Prepare for AWR Report Generation" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Take Start Snapshot" enabled="true">
            <stringProp name="dataSource">connection_dba</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT dbms_workload_repository.create_snapshot() FROM dual</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">start_snapshot_id</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Store Start Snapshot ID" enabled="true">
            <stringProp name="BeanShellSampler.query">props.put(&quot;start_snapshot_id&quot;,vars.get(&quot;start_snapshot_id_1&quot;));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DB Load Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${number_of_threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${number_of_threads}</stringProp>
        <longProp name="ThreadGroup.start_time">1462364362000</longProp>
        <longProp name="ThreadGroup.end_time">1462364370000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Set Module and Action Name" enabled="true">
          <stringProp name="dataSource">connection</stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="query">BEGIN
  dbms_application_info.set_module(module_name=&gt;&apos;JMeter&apos;, action_name=&gt;&apos;DbLoad&apos;);
END;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">${summary_filename_prefix}_${start_timestamp}.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="RespTimeGraph.interval">30000</stringProp>
            <stringProp name="RespTimeGraph.graphtitle">Response Time Graph</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Run SQL Statements" enabled="true"/>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Randomly Pick a SQL Statement" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SQL 1" enabled="true">
                <stringProp name="dataSource">connection</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT p.prod_category, c.country_id, sum(quantity_sold) AS quantity_sold, sum(amount_sold) AS amount_sold
FROM sh.sales s, sh.customers c, sh.products p
WHERE s.cust_id = c.cust_id
AND s.prod_id = p.prod_id
GROUP BY p.prod_category, c.country_id
ORDER BY p.prod_category, c.country_id</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">example of query without bind variables</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SQL 2" enabled="true">
                <stringProp name="dataSource">connection</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT sum(amount_sold), sum(quantity_sold)
FROM sh.sales
WHERE channel_id = ?</stringProp>
                <stringProp name="queryArguments">${sql_2_channel_id}</stringProp>
                <stringProp name="queryArgumentsTypes">INTEGER</stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">example of query with one bind variable randomly generated by JMeter</stringProp>
              </JDBCSampler>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">9</stringProp>
                  <stringProp name="minimumValue">2</stringProp>
                  <stringProp name="outputFormat">0</stringProp>
                  <boolProp name="perThread">false</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">sql_2_channel_id</stringProp>
                </RandomVariableConfig>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SQL 3" enabled="true">
                <stringProp name="TestPlan.comments">example of query with several bind variables taken from a CSV file</stringProp>
                <stringProp name="dataSource">connection</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT sum(amount_sold), sum(quantity_sold)
FROM sh.sales
WHERE prod_id = ? AND cust_id = ? AND time_id = ? AND channel_id = ? AND promo_id = ?</stringProp>
                <stringProp name="queryArguments">${sql_3_prod_id},${sql_3_cust_id},${sql_3_time_id},${sql_3_channel_id},${sql_3_promo_id}</stringProp>
                <stringProp name="queryArgumentsTypes">INTEGER, INTEGER, DATE, INTEGER, INTEGER</stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                  <stringProp name="delimiter">,</stringProp>
                  <stringProp name="fileEncoding"></stringProp>
                  <stringProp name="filename">DbLoad_sql_3_bind_variables.csv</stringProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="variableNames">sql_3_prod_id,sql_3_cust_id,sql_3_time_id,sql_3_channel_id,sql_3_promo_id</stringProp>
                </CSVDataSet>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SQL 4" enabled="true">
                <stringProp name="TestPlan.comments">example of PL/SQL block with one output and two input bind variables</stringProp>
                <stringProp name="dataSource">connection</stringProp>
                <stringProp name="queryType">Callable Statement</stringProp>
                <stringProp name="query">BEGIN
  ? := dbms_random.string(?, ?);
END;</stringProp>
                <stringProp name="queryArguments">,X,16</stringProp>
                <stringProp name="queryArgumentsTypes">OUT VARCHAR,VARCHAR,INTEGER</stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian contTimer" enabled="true">
              <stringProp name="ConstantTimer.delay">${sql_delay}</stringProp>
              <stringProp name="RandomTimer.range">${sql_delay_deviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1450205101000</longProp>
        <longProp name="ThreadGroup.end_time">1450205101000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Generate AWR Report" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Take End Snapshot" enabled="true">
            <stringProp name="dataSource">connection_dba</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT dbms_workload_repository.create_snapshot() FROM dual</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">end_snapshot_id</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Generate HTML Report (Instance #1)" enabled="true">
            <stringProp name="dataSource">connection_dba</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="query">SELECT output 
FROM v$database, TABLE(dbms_workload_repository.awr_report_html(l_dbid =&gt; dbid, l_inst_num =&gt; ?, l_bid =&gt; ?, l_eid =&gt; ?))</stringProp>
            <stringProp name="queryArguments">1,${__P(start_snapshot_id)},${end_snapshot_id_1}</stringProp>
            <stringProp name="queryArgumentsTypes">INTEGER,INTEGER,INTEGER</stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Report" enabled="true">
              <stringProp name="FileSaver.filename">${awr_report_filename_prefix}_${start_timestamp}.html</stringProp>
              <boolProp name="FileSaver.errorsonly">false</boolProp>
              <boolProp name="FileSaver.skipautonumber">true</boolProp>
              <boolProp name="FileSaver.skipsuffix">true</boolProp>
              <boolProp name="FileSaver.successonly">false</boolProp>
            </ResultSaver>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Generate Text Report (Instance #1)" enabled="true">
            <stringProp name="dataSource">connection_dba</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="query">SELECT output 
FROM v$database, TABLE(dbms_workload_repository.awr_report_text(l_dbid =&gt; dbid, l_inst_num =&gt; ?, l_bid =&gt; ?, l_eid =&gt; ?))</stringProp>
            <stringProp name="queryArguments">1,${__P(start_snapshot_id)},${end_snapshot_id_1}</stringProp>
            <stringProp name="queryArgumentsTypes">INTEGER,INTEGER,INTEGER</stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Report" enabled="true">
              <stringProp name="FileSaver.filename">${awr_report_filename_prefix}_${start_timestamp}.txt</stringProp>
              <boolProp name="FileSaver.errorsonly">false</boolProp>
              <boolProp name="FileSaver.skipautonumber">true</boolProp>
              <boolProp name="FileSaver.skipsuffix">true</boolProp>
              <boolProp name="FileSaver.successonly">false</boolProp>
            </ResultSaver>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
